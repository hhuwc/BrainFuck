package com.wc.brainFuck;

import org.testng.annotations.Test;


public class 解释器测试 {

    private BrainFuckVM brainFuckVM = new BrainFuckVM();

    @Test
    public void test7() {


        String code = ">++++++++++[<++++++++++>-]<->>>>>+++[>+++>+++<<-]<<<<+<[>[>+\n" +
                ">+<<-]>>[-<<+>>]++++>+<[-<->]<[[-]>>-<<]>>[[-]<<+>>]<<[[-]>>\n" +
                ">>>>[[-]<++++++++++<->>]<-[>+>+<<-]>[<+>-]+>[[-]<->]<<<<<<<<\n" +
                "<->>]<[>+>+<<-]>>[-<<+>>]+>+<[-<->]<[[-]>>-<<]>>[[-]<<+>>]<<\n" +
                "<[>>+>+<<<-]>>>[-<<<+>>>]++>+<[-<->]<[[-]>>-<<]>>[[-]<<+>>]<\n" +
                "<[>+<[-]]<[>>+<<[-]]>>[<<+>>[-]]<<<[>>+>+<<<-]>>>[-<<<+>>>]+\n" +
                "+++>+<[-<->]<[[-]>>-<<]>>[[-]<<+>>]<<[>+<[-]]<[>>+<<[-]]>>[<\n" +
                "<+>>[-]]<<[[-]>>>++++++++[>>++++++<<-]>[<++++++++[>++++++<-]\n" +
                ">.<++++++++[>------<-]>[<<+>>-]]>.<<++++++++[>>------<<-]<[-\n" +
                ">>+<<]<++++++++[<++++>-]<.>+++++++[>+++++++++<-]>+++.<+++++[\n" +
                ">+++++++++<-]>.+++++..--------.-------.++++++++++++++>>[>>>+\n" +
                ">+<<<<-]>>>>[-<<<<+>>>>]>+<[-<->]<[[-]>>-<<]>>[[-]<<+>>]<<<<\n" +
                "[>>>+>+<<<<-]>>>>[-<<<<+>>>>]+>+<[-<->]<[[-]>>-<<]>>[[-]<<+>\n" +
                ">]<<<[>>+<<[-]]>[>+<[-]]++>>+<[-<->]<[[-]>>-<<]>>[[-]<<+>>]<\n" +
                "+<[[-]>-<]>[<<<<<<<.>>>>>>>[-]]<<<<<<<<<.>>----.---------.<<\n" +
                ".>>----.+++..+++++++++++++.[-]<<[-]]<[>+>+<<-]>>[-<<+>>]+>+<\n" +
                "[-<->]<[[-]>>-<<]>>[[-]<<+>>]<<<[>>+>+<<<-]>>>[-<<<+>>>]++++\n" +
                ">+<[-<->]<[[-]>>-<<]>>[[-]<<+>>]<<[>+<[-]]<[>>+<<[-]]>>[<<+>\n" +
                ">[-]]<<[[-]>++++++++[<++++>-]<.>++++++++++[>+++++++++++<-]>+\n" +
                ".-.<<.>>++++++.------------.---.<<.>++++++[>+++<-]>.<++++++[\n" +
                ">----<-]>++.+++++++++++..[-]<<[-]++++++++++.[-]]<[>+>+<<-]>>\n" +
                "[-<<+>>]+++>+<[-<->]<[[-]>>-<<]>>[[-]<<+>>]<<[[-]++++++++++.\n" +
                ">+++++++++[>+++++++++<-]>+++.+++++++++++++.++++++++++.------\n" +
                ".<++++++++[>>++++<<-]>>.<++++++++++.-.---------.>.<-.+++++++\n" +
                "++++.++++++++.---------.>.<-------------.+++++++++++++.-----\n" +
                "-----.>.<++++++++++++.---------------.<+++[>++++++<-]>..>.<-\n" +
                "---------.+++++++++++.>.<<+++[>------<-]>-.+++++++++++++++++\n" +
                ".---.++++++.-------.----------.[-]>[-]<<<.[-]]<[>+>+<<-]>>[-\n" +
                "<<+>>]++++>+<[-<->]<[[-]>>-<<]>>[[-]<<+>>]<<[[-]++++++++++.[\n" +
                "-]<[-]>]<+<]";


        brainFuckVM.interprete(code);

    }


    @Test
    public void test9() {

        String code = " >    \n" +
                "                               + +    \n" +
                "                              +   +    \n" +
                "                             [ < + +    \n" +
                "                            +       +    \n" +
                "                           + +     + +    \n" +
                "                          >   -   ]   >    \n" +
                "                         + + + + + + + +    \n" +
                "                        [               >    \n" +
                "                       + +             + +    \n" +
                "                      <   -           ]   >    \n" +
                "                     > + + >         > > + >    \n" +
                "                    >       >       +       <    \n" +
                "                   < <     < <     < <     < <    \n" +
                "                  <   [   -   [   -   >   +   <    \n" +
                "                 ] > [ - < + > > > . < < ] > > >    \n" +
                "                [                               [    \n" +
                "               - >                             + +    \n" +
                "              +   +                           +   +    \n" +
                "             + + [ >                         + + + +    \n" +
                "            <       -                       ]       >    \n" +
                "           . <     < [                     - >     + <    \n" +
                "          ]   +   >   [                   -   >   +   +    \n" +
                "         + + + + + + + +                 < < + > ] > . [    \n" +
                "        -               ]               >               ]    \n" +
                "       ] +             < <             < [             - [    \n" +
                "      -   >           +   <           ]   +           >   [    \n" +
                "     - < + >         > > - [         - > + <         ] + + >    \n" +
                "    [       -       <       -       >       ]       <       <    \n" +
                "   < ]     < <     < <     ] +     + +     + +     + +     + +    \n" +
                "  +   .   +   +   +   .   [   -   ]   <   ]   +   +   +   +   + ";
        brainFuckVM.interprete(code);


    }


//    public static void main(String[] args) {
//        BrainFuckVM brainFuckVM = new BrainFuckVM();
//        String code = ",[.,]";
//        System.out.println(brainFuckVM.interprete(code));
//        System.out.println((byte) '\n');
//    }

    //    @Test(testName = "Truth-Machine")
//    public void test11() {
//        String code = ",[.-[-->++<]>+]";
//        System.out.println(brainFuckVM.interprete(code));
//    }
    @Test(testName = "错误括号测试")
    public void testUnclosedBracket() {
        String code = "[]]\n" +
                "[[][]\n" +
                "]\n" +
                "][[]\n" +
                "[]\n" +
                "[";
        brainFuckVM.interprete(code);
    }

}
